{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar rad2deg = require( '@stdlib/math-base-special-rad2deg' );\nvar asec = require( '@stdlib/math-base-special-asec' );\n\n\n// MAIN //\n\n/**\n* Computes the arcsecant (in degrees) of a double-precision floating-point number.\n*\n* @param {number} x - input value\n* @returns {number} arcsecant (in degrees)\n*\n* @example\n* var v = asecd( 1 );\n* // returns 0.0\n*\n* @example\n* var v = asecd( 2 * Math.sqrt( 3 ) / 3 );\n* // returns ~30.0\n*\n* @example\n* var v = asecd( Math.sqrt( 2 ) );\n* // returns ~45.0\n*\n* @example\n* var v = asecd( 2 );\n* // returns ~60.0\n*\n* @example\n* var v = asecd( Infinity );\n* // returns 90.0\n*\n* @example\n* var v = asecd( NaN );\n* // returns NaN\n*/\nfunction asecd( x ) {\n\tvar rad = asec( x );\n\treturn rad2deg( rad );\n}\n\n\n// EXPORTS //\n\nmodule.exports = asecd;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the arcsecant (in degrees) of a double-precision floating-point number.\n*\n* @module @stdlib/math-base-special-asecd\n*\n* @example\n* var asecd = require( '@stdlib/math-base-special-asecd' );\n*\n* var v = asecd( 1 );\n* // returns 0.0\n*\n* v = asecd( 2 * Math.sqrt( 3 ) / 3 );\n* // returns ~30.0\n*\n* v = asecd( Math.sqrt( 2 ) );\n* // returns ~45.0\n*\n* v = asecd( 2 );\n* // returns ~60.0\n*\n* v = asecd( Infinity );\n* // returns 90.0\n*\n* v = asecd( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAU,QAAS,mCAAoC,EACvDC,EAAO,QAAS,gCAAiC,EAmCrD,SAASC,EAAOC,EAAI,CACnB,IAAIC,EAAMH,EAAME,CAAE,EAClB,OAAOH,EAASI,CAAI,CACrB,CAKAL,EAAO,QAAUG,ICjBjB,IAAIG,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "rad2deg", "asec", "asecd", "x", "rad", "main"]
}
